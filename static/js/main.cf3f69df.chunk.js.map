{"version":3,"sources":["data/types/ui.ts","data/redux/task/task.selectors.ts","data/services/task.service.ts","data/redux/task/task.actions.ts","data/redux/task/task.types.ts","components/task-list/TaskListItem.tsx","components/task-list/TaskList.tsx","data/redux/ui/ui.actions.ts","data/redux/ui/ui.types.ts","components/task-component/TaskComponent.tsx","components/top-bar/TopBar.tsx","pages/home/Home.tsx","data/redux/task/task.reducer.ts","data/redux/ui/ui.reducer.ts","data/redux/reducer.redux.ts","data/redux/store.redux.ts","data/services/service-locator.ts","errors/modal-not-found.ts","components/buttons/SimpleButton.tsx","components/animatons/fade-in-dialog-animation.ts","components/modal/modal-types/SimpleModal.tsx","components/input/SimpleTextInput.tsx","components/spacing/Spacing.tsx","components/modal/app-modals/DeleteAllTasksModal.tsx","components/modal/modal-types/MobileFullScreenModal.tsx","pages/settings/Settings.tsx","components/modal/app-modals/SettingsModal.tsx","components/modal/app-modals/EditTaskModal.tsx","components/modal/ModalManager.tsx","App.tsx","index.tsx","data/types/index.ts"],"names":["DELETE_ALL_TASKS_MODAL","SETTINGS_MODAL","EDIT_TASK_MODAL","selectTasksByParentId","createSelector","state","tasks","parentId","TaskService","deleteAllTasks","a","saveTasks","JSON","parse","localStorage","getItem","this","setItem","stringify","undefined","filter","task","id","find","updateData","index","findIndex","t","Error","data","createdAt","Date","now","Math","random","isComplete","hasSubtasks","push","taskToDelete","taskIdsToDelete","Set","add","tasksqueue","length","shift","getTasksByParentId","forEach","has","fetchTaskRequest","type","fetchTaskFinished","addTaskRequest","addTaskFinished","deleteTaskRequest","deleteTaskFinished","TaskItem","styled","div","isSelected","TaskTextContent","EditIcon","i","DeleteIcon","TaskListItem","onTaskClick","onDeleteTask","onEditTask","handleEditClick","React","useCallback","event","stopPropagation","handleDeleteClick","key","onClick","content","className","memo","selectedTaskId","map","showModal","modalOptions","hideModal","modalType","Container","ParentTaskName","TaskForm","form","TaskInput","input","NoTasksFound","TaskListContainer","mapDispatchToProps","fetchTasks","dispatch","getState","serviceLocator","taskService","get","addTask","createTask","deleteTask","connector","connect","parentTask","selectedTask","useEffect","useState","taskText","setTaskText","handleDeleteTask","then","handleEditTask","hasTasks","onSubmit","preventDefault","onChange","target","value","placeholder","Title","SettingsButton","button","TopBar","title","actions","iconName","Panels","showDialog","ownProps","rootTask","openTasks","setOpenTasks","containerRef","useRef","container","current","scrollLeft","scrollWidth","ref","style","display","width","height","maxWidth","slice","handleOnTaskClick","initalState","initialState","modals","uiReducer","action","modal","combineReducers","ui","lazyInstances","registers","constructor","args","register","name","instance","creator","registerLazySingleton","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ModalNotFoundError","SimpleButton","color","keyframes","OverlayContainer","ContentContainer","fadeInDialogAnimation","SimpleModal","onClose","children","e","Label","label","Input","props","borderColor","SimpleTextInput","normalizeValues","bottom","left","right","top","Spacing","margin","padding","restProps","normalizedMargin","normalizedPadding","inputText","setInputText","handleDeleteAllTasks","disabled","MobileFullScreenModal","CloseIcon","Heading","OptionList","ul","Option","li","handleModalClose","marginTop","justifySelf","modalLookupTable","DeleteAllTasksModal","SettingsModal","EditTaskModal","Modal","store","createStore","reducer","applyMiddleware","thunk","withExtraArgument","App","basename","process","path","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf3f69df.chunk.js","sourcesContent":["import { Task } from \"./task\";\n\nexport const DELETE_ALL_TASKS_MODAL = \"DELETE_ALL_TASKS_MODAL\";\nexport const SETTINGS_MODAL = \"SETTINGS_MODAL\";\nexport const EDIT_TASK_MODAL = \"EDIT_TASK_MODAL\";\n\nexport interface BaseModalOptions {}\n\nexport interface DeleteAllTaskModalOptions extends BaseModalOptions {\n  type: typeof DELETE_ALL_TASKS_MODAL;\n}\n\nexport interface SettingsModalOptions extends BaseModalOptions {\n  type: typeof SETTINGS_MODAL;\n}\n\nexport interface EditTaskModalOptions extends BaseModalOptions {\n  type: typeof EDIT_TASK_MODAL;\n  task: Task;\n}\n\nexport type ModalOptions =\n  | DeleteAllTaskModalOptions\n  | SettingsModalOptions\n  | EditTaskModalOptions;\n\nexport type ModalType =\n  | typeof DELETE_ALL_TASKS_MODAL\n  | typeof SETTINGS_MODAL\n  | typeof EDIT_TASK_MODAL;\n","import { createSelector } from \"reselect\";\nimport { RootState, Task } from \"src/data/types\";\n\nexport const selectTasksByParentId = createSelector<\n  RootState,\n  string,\n  Record<string, Task[] | undefined>,\n  string,\n  Task[]\n>(\n  (state: RootState) => state.tasks.tasks,\n  (state: RootState, parentId: string) => parentId,\n  (tasks, parentId) => tasks[parentId] || []\n);\n","import { Task, AddTaskData, UpdateTaskData } from \"src/data/types\";\n\nexport class TaskService {\n  private tasks: Task[] = [];\n\n  constructor() {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\") || \"[]\");\n    this.tasks = tasks;\n  }\n\n  private saveTasks() {\n    localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n  }\n\n  public async getAll() {\n    return this.tasks;\n  }\n\n  public async getTasksByParentId(\n    parentId: string | undefined = undefined\n  ): Promise<Task[]> {\n    return this.tasks.filter((task) => task.parentId === parentId);\n  }\n\n  public async getById(id: string): Promise<Task | undefined> {\n    return this.tasks.find((task) => task.id === id);\n  }\n\n  public async updateTaskById(\n    id: string,\n    updateData: UpdateTaskData\n  ): Promise<Task> {\n    const index = this.tasks.findIndex((t) => t.id === id);\n\n    if (index === -1) {\n      throw new Error(`Task with id ${id} not found!`);\n    }\n\n    this.tasks[index] = { ...this.tasks[index], ...updateData };\n\n    return this.tasks[index];\n  }\n\n  public async createTask(data: AddTaskData): Promise<Task> {\n    const task: Task = {\n      ...data,\n      createdAt: Date.now(),\n      id: `${Date.now()}-${Math.random() * Math.random() * Math.random()}`,\n      isComplete: false,\n      hasSubtasks: false,\n    };\n    this.tasks.push(task);\n    this.saveTasks();\n    return task;\n  }\n\n  public async deleteTask(task: Task): Promise<void> {\n    const index = this.tasks.findIndex((t) => t.id === task.id);\n    if (index >= 0) {\n      let taskToDelete = this.tasks[index];\n      const taskIdsToDelete: Set<string> = new Set();\n      taskIdsToDelete.add(taskToDelete.id);\n      const tasksqueue: Task[] = [taskToDelete];\n      while (tasksqueue.length) {\n        const task = tasksqueue.shift();\n        const tasks = await this.getTasksByParentId(task?.id);\n        tasksqueue.push(...tasks);\n        tasks.forEach((task) => taskIdsToDelete.add(task.id));\n      }\n      this.tasks = this.tasks.filter((task) => !taskIdsToDelete.has(task.id));\n      this.saveTasks();\n    }\n  }\n\n  public deleteAllTasks = async (): Promise<void> => {\n    this.tasks = [];\n    this.saveTasks();\n  };\n}\n","import {\n  FetchTasksFinishAction,\n  FETCH_TASK_FINISH,\n  FETCH_TASK_REQUEST,\n  AddTaskFinishAction,\n  ADD_TASK_FINISH,\n  UpdateTaskFinishAction,\n  UPDATE_TASK_FINISH,\n  DeleteTaskFinishAction,\n  DELETE_TASK_FINISH,\n  ADD_TASK_REQUEST,\n  AddTaskRequestAction,\n  FetchTasksRequestAction,\n  DeleteTaskRequestAction,\n  DELETE_TASK_REQUEST,\n  DeleteAllTasksFinishAction,\n  DELETE_ALL_TASKS_FINISH,\n  DeleteAllTasksRequestAction,\n  DELETE_ALL_TASKS_REQUEST,\n  UpdateTaskRequestAction,\n  UPDATE_TASK_REQUEST,\n} from \"./task.types\";\nimport { Task, AppThunk, AddTaskData, UpdateTaskData } from \"src/data/types\";\nimport { TaskService } from \"src/data/services/task.service\";\n\nexport const fetchTaskRequest = (parentId: string): FetchTasksRequestAction => {\n  return {\n    parentId,\n    type: FETCH_TASK_REQUEST,\n  };\n};\n\nexport const fetchTaskFinished = (\n  parentId: string,\n  tasks: Task[]\n): FetchTasksFinishAction => {\n  return {\n    type: FETCH_TASK_FINISH,\n    parentId,\n    tasks,\n  };\n};\n\nexport const addTaskRequest = (data: AddTaskData): AddTaskRequestAction => {\n  return {\n    data,\n    type: ADD_TASK_REQUEST,\n  };\n};\n\nexport const addTaskFinished = (task: Task): AddTaskFinishAction => {\n  return {\n    task,\n    type: ADD_TASK_FINISH,\n  };\n};\n\nexport const updateTaskRequest = (\n  id: string,\n  data: UpdateTaskData\n): UpdateTaskRequestAction => {\n  return {\n    id,\n    data,\n    type: UPDATE_TASK_REQUEST,\n  };\n};\n\nexport const updateTaskFinished = (task: Task): UpdateTaskFinishAction => {\n  return {\n    task,\n    type: UPDATE_TASK_FINISH,\n  };\n};\n\nexport const deleteTaskRequest = (task: Task): DeleteTaskRequestAction => {\n  return {\n    task,\n    type: DELETE_TASK_REQUEST,\n  };\n};\n\nexport const deleteTaskFinished = (task: Task): DeleteTaskFinishAction => {\n  return {\n    task,\n    type: DELETE_TASK_FINISH,\n  };\n};\n\nexport const deleteAllTasksRequest = (): DeleteAllTasksRequestAction => {\n  return {\n    type: DELETE_ALL_TASKS_REQUEST,\n  };\n};\n\nexport const deleteAllTasksFinished = (): DeleteAllTasksFinishAction => {\n  return {\n    type: DELETE_ALL_TASKS_FINISH,\n  };\n};\n\nexport const fetchTasks = (parentId: string): AppThunk<Promise<void>> => {\n  return async (dispatch, getState, serviceLocator) => {\n    dispatch(fetchTaskRequest(parentId));\n    const taskService = serviceLocator.get(TaskService);\n    const tasks = await taskService.getTasksByParentId(parentId);\n    dispatch(fetchTaskFinished(parentId, tasks));\n  };\n};\n\nexport const addTask = (data: AddTaskData): AppThunk<Promise<void>> => {\n  return async (dispatch, getState, serviceLocator) => {\n    dispatch(addTaskRequest(data));\n    const taskService = serviceLocator.get(TaskService);\n    const task = await taskService.createTask(data);\n    dispatch(addTaskFinished(task));\n  };\n};\n\nexport const deleteTask = (task: Task): AppThunk<Promise<void>> => {\n  return async (dispatch, getState, serviceLocator) => {\n    dispatch(deleteTaskRequest(task));\n    const taskService = serviceLocator.get(TaskService);\n    await taskService.deleteTask(task);\n    dispatch(deleteTaskFinished(task));\n  };\n};\n\nexport const deleteAllTasks = (): AppThunk<Promise<void>> => {\n  return async (dispatch, getState, serviceLocator) => {\n    dispatch(deleteAllTasksRequest());\n    const taskService = serviceLocator.get(TaskService);\n    await taskService.deleteAllTasks();\n    dispatch(deleteAllTasksFinished());\n  };\n};\n\nexport const updateTask = (\n  id: string,\n  data: UpdateTaskData\n): AppThunk<Promise<void>> => {\n  return async (dispatch, getState, serviceLocator) => {\n    dispatch(updateTaskRequest(id, data));\n    const taskService = serviceLocator.get(TaskService);\n    const task = await taskService.updateTaskById(id, data);\n    dispatch(updateTaskFinished(task));\n  };\n};\n","import { Task, AddTaskData, UpdateTaskData } from \"src/data/types\";\n\nexport const FETCH_TASK_REQUEST = \"FETCH_TASK_REQUEST\";\nexport const FETCH_TASK_FINISH = \"FETCH_TASK_FINISH\";\nexport const ADD_TASK_REQUEST = \"ADD_TASK_REQUEST\";\nexport const ADD_TASK_FINISH = \"ADD_TASK_FINISH\";\nexport const UPDATE_TASK_REQUEST = \"UPDATE_TASK_REQUEST\";\nexport const UPDATE_TASK_FINISH = \"UPDATE_TASK_FINISH\";\nexport const DELETE_TASK_REQUEST = \"DELETE_TASK_REQUEST\";\nexport const DELETE_TASK_FINISH = \"DELETE_TASK_FINISH\";\nexport const DELETE_ALL_TASKS_REQUEST = \"DELETE_ALL_TASKS\";\nexport const DELETE_ALL_TASKS_FINISH = \"DELETE_ALL_TASKS_FINISH\";\n\nexport interface FetchTasksRequestAction {\n  type: typeof FETCH_TASK_REQUEST;\n  parentId: string;\n}\n\nexport interface FetchTasksFinishAction {\n  type: typeof FETCH_TASK_FINISH;\n  parentId: string;\n  tasks: Task[];\n}\n\nexport interface AddTaskRequestAction {\n  type: typeof ADD_TASK_REQUEST;\n  data: AddTaskData;\n}\n\nexport interface AddTaskFinishAction {\n  type: typeof ADD_TASK_FINISH;\n  task: Task;\n}\n\nexport interface UpdateTaskRequestAction {\n  type: typeof UPDATE_TASK_REQUEST;\n  id: string;\n  data: UpdateTaskData;\n}\n\nexport interface UpdateTaskFinishAction {\n  type: typeof UPDATE_TASK_FINISH;\n  task: Task;\n}\n\nexport interface DeleteTaskRequestAction {\n  type: typeof DELETE_TASK_REQUEST;\n  task: Task;\n}\n\nexport interface DeleteTaskFinishAction {\n  type: typeof DELETE_TASK_FINISH;\n  task: Task;\n}\n\nexport interface DeleteAllTasksRequestAction {\n  type: typeof DELETE_ALL_TASKS_REQUEST;\n}\n\nexport interface DeleteAllTasksFinishAction {\n  type: typeof DELETE_ALL_TASKS_FINISH;\n}\n\nexport interface TaskState {\n  tasks: Record<string, Task[]>;\n}\n\nexport type TaskAction =\n  | AddTaskFinishAction\n  | AddTaskRequestAction\n  | DeleteTaskFinishAction\n  | DeleteTaskRequestAction\n  | UpdateTaskFinishAction\n  | UpdateTaskRequestAction\n  | FetchTasksFinishAction\n  | FetchTasksRequestAction\n  | DeleteAllTasksRequestAction\n  | DeleteAllTasksFinishAction;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Task } from \"src/data/types\";\n\ninterface Props {\n  isSelected: boolean;\n  task: Task;\n  onTaskClick: () => void;\n  onDeleteTask: () => void;\n  onEditTask: () => void;\n}\n\n/* Styles */\nconst TaskItem = styled.div<{ isSelected: boolean }>`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1rem;\n  padding: 16px;\n  border-bottom: 1px solid lightgrey;\n  white-space: normal;\n  transition: 0.3s;\n  background-color: ${({ isSelected }) =>\n    isSelected ? \"rgb(240, 240, 240)\" : \"none\"};\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(240, 240, 240);\n  }\n\n  &:hover > .material-icons {\n    visibility: visible;\n  }\n`;\n\nconst TaskTextContent = styled.div`\n  flex: 1;\n`;\n\nconst EditIcon = styled.i`\n  font-size: 1.2rem;\n  color: lightgrey;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nconst DeleteIcon = styled.i`\n  visibility: hidden;\n  color: darkred;\n  font-size: 1.2rem;\n  margin-right: 8px;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nconst TaskListItem: FunctionComponent<Props> = ({\n  task,\n  onTaskClick,\n  onDeleteTask,\n  onEditTask,\n  isSelected,\n}) => {\n  const handleEditClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onEditTask();\n    },\n    [onEditTask]\n  );\n\n  const handleDeleteClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onDeleteTask();\n    },\n    [onDeleteTask]\n  );\n\n  return (\n    <TaskItem key={task.id} onClick={onTaskClick} isSelected={isSelected}>\n      <TaskTextContent>{task.content}</TaskTextContent>\n      <DeleteIcon className=\"material-icons\" onClick={handleDeleteClick}>\n        delete\n      </DeleteIcon>\n      <EditIcon className=\"material-icons\" onClick={handleEditClick}>\n        edit\n      </EditIcon>\n    </TaskItem>\n  );\n};\n\nexport default TaskListItem;\n","import React, { FunctionComponent } from \"react\";\nimport { Task } from \"src/data/types\";\nimport TaskListItem from \"./TaskListItem\";\n\ninterface Props {\n  selectedTaskId: string | undefined;\n  tasks: Task[];\n  onTaskClick: (task: Task) => void;\n  onDeleteTask: (task: Task) => void;\n  onEditTask: (task: Task) => void;\n}\n\nconst TaskList: FunctionComponent<Props> = ({\n  tasks,\n  onTaskClick,\n  onDeleteTask,\n  onEditTask,\n  selectedTaskId,\n}) => {\n  if (!tasks || tasks.length === 0) {\n    return null;\n  }\n\n  return (\n    <div>\n      {tasks.map((task) => {\n        return (\n          <TaskListItem\n            key={task.id}\n            task={task}\n            onTaskClick={() => onTaskClick(task)}\n            onDeleteTask={() => onDeleteTask(task)}\n            onEditTask={() => onEditTask(task)}\n            isSelected={selectedTaskId === task.id}\n          >\n            {task.content}\n          </TaskListItem>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default React.memo(TaskList);\n","import { ModalOptions, ModalType } from \"src/data/types\";\nimport {\n  ShowModalAction,\n  SHOW_MODAL,\n  HideModalAction,\n  HIDE_MODAL,\n} from \"./ui.types\";\n\nexport const showModal = (modalOptions: ModalOptions): ShowModalAction => {\n  return {\n    modalOptions: modalOptions,\n    type: SHOW_MODAL,\n  };\n};\n\nexport const hideModal = (modalType: ModalType): HideModalAction => {\n  return {\n    modalType,\n    type: HIDE_MODAL,\n  };\n};\n","import { ModalOptions } from \"src/data/types\";\n\nexport const SHOW_MODAL = \"SHOW_MODAL\";\nexport const HIDE_MODAL = \"HIDE_MODAL\";\n\nexport interface ShowModalAction {\n  type: typeof SHOW_MODAL;\n  modalOptions: ModalOptions;\n}\n\nexport interface HideModalAction {\n  type: typeof HIDE_MODAL;\n  modalType: string;\n}\n\nexport interface UiState {\n  modals: ModalOptions[];\n}\n\nexport type UiActions = ShowModalAction | HideModalAction;\n","import React, { FunctionComponent } from \"react\";\nimport { RootState, Task, EDIT_TASK_MODAL } from \"src/data/types\";\nimport { selectTasksByParentId } from \"src/data/redux/task/task.selectors\";\nimport {\n  fetchTasks,\n  addTask,\n  deleteTask,\n} from \"src/data/redux/task/task.actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport TaskList from \"../task-list/TaskList\";\nimport styled from \"styled-components\";\nimport { showModal } from \"src/data/redux/ui/ui.actions\";\n\n/* Styles */\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  border-left: 1px solid lightgrey;\n  border-right: 1px solid lightgrey;\n`;\n\nconst ParentTaskName = styled.div`\n  padding: 16px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst TaskForm = styled.form`\n  width: 100%;\n`;\n\nconst TaskInput = styled.input`\n  width: 100%;\n  border: none;\n  border-bottom: 1px solid lightgrey;\n  background-color: lightgrey;\n  font-size: 1rem;\n  padding: 16px;\n`;\n\nconst NoTasksFound = styled.div`\n  height: 100%;\n  align-self: center;\n  margin-top: 16px;\n`;\n\nconst TaskListContainer = styled.div`\n  height: 100%;\n  overflow-y: auto;\n`;\n\n/* State */\ntype OwnProps = {\n  selectedTask: Task | undefined;\n  parentTask: Task;\n  onTaskClick: (task: Task) => void;\n  onDeleteTask: (task: Task) => void;\n};\n\nconst mapStateToProps = (state: RootState, { parentTask }: OwnProps) => {\n  return {\n    tasks: selectTasksByParentId(state, parentTask.id),\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchTasks,\n  addTask,\n  deleteTask,\n  showModal,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\n/* Component */\nconst TaskComponent: FunctionComponent<OwnProps & PropsFromRedux> = ({\n  parentTask,\n  fetchTasks,\n  deleteTask,\n  tasks,\n  addTask,\n  onTaskClick,\n  onDeleteTask,\n  showModal,\n  selectedTask,\n}) => {\n  React.useEffect(() => {\n    fetchTasks(parentTask.id);\n  }, [parentTask, fetchTasks]);\n\n  const [taskText, setTaskText] = React.useState(\"\");\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTask({ content: taskText, parentId: parentTask.id }).then(() =>\n      setTaskText(\"\")\n    );\n  };\n\n  const handleDeleteTask = React.useCallback(\n    (task: Task) => {\n      deleteTask(task).then(() => {\n        onDeleteTask(task);\n      });\n    },\n    [deleteTask, onDeleteTask]\n  );\n\n  const handleEditTask = React.useCallback(\n    (task: Task) => {\n      showModal({ type: EDIT_TASK_MODAL, task });\n    },\n    [showModal]\n  );\n\n  const hasTasks = tasks && tasks.length > 0;\n\n  return (\n    <Container>\n      <ParentTaskName>{parentTask.content}</ParentTaskName>\n      <TaskForm onSubmit={handleSubmit}>\n        <TaskInput\n          onChange={(event) => setTaskText(event.target.value)}\n          value={taskText}\n          placeholder=\"Enter Task...\"\n        />\n      </TaskForm>\n      {hasTasks ? (\n        <TaskListContainer>\n          <TaskList\n            tasks={tasks}\n            onTaskClick={onTaskClick}\n            onDeleteTask={handleDeleteTask}\n            onEditTask={handleEditTask}\n            selectedTaskId={selectedTask?.id}\n          />\n        </TaskListContainer>\n      ) : (\n        <NoTasksFound>No tasks found...</NoTasksFound>\n      )}\n    </Container>\n  );\n};\n\nexport default connector(TaskComponent);\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface Action {\n  onClick: () => void;\n  iconName: string;\n}\n\ninterface OwnProps {\n  title: string;\n  actions?: Action[];\n}\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #e1e1e1;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n`;\n\nconst SettingsButton = styled.button`\n  border: none;\n  background-color: transparent;\n  font-size: 16px;\n  padding: 0;\n  outline: none;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    color: grey;\n    border: none;\n  }\n`;\n\nconst TopBar: FunctionComponent<OwnProps> = ({ title, actions }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {actions &&\n        actions.map(({ onClick, iconName }, index) => {\n          return (\n            <SettingsButton onClick={onClick} key={index}>\n              <i className=\"material-icons\">{iconName}</i>\n            </SettingsButton>\n          );\n        })}\n    </Container>\n  );\n};\n\nexport default TopBar;\n","import React, { FunctionComponent } from \"react\";\nimport TaskComponent from \"src/components/task-component/TaskComponent\";\nimport { Task, RootState, SETTINGS_MODAL } from \"src/data/types\";\nimport styled from \"styled-components\";\nimport TopBar from \"src/components/top-bar/TopBar\";\nimport { showModal } from \"src/data/redux/ui/ui.actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\n/* Styles */\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst Panels = styled.div`\n  overflow-y: auto;\n  white-space: nowrap;\n  width: 100%;\n  height: 100%;\n  scroll-behavior: smooth;\n`;\n\n/* Props and State */\ninterface OwnProps {}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  showDialog: showModal,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\n// Todo: Move somewhere else\nconst rootTask: Task = {\n  id: \"-1\",\n  createdAt: Date.now(),\n  isComplete: false,\n  parentId: \"-2\",\n  content: \"Home\",\n  hasSubtasks: false,\n};\n\n/* Component */\nconst Home: FunctionComponent<PropsFromRedux> = ({ showDialog }) => {\n  const [openTasks, setOpenTasks] = React.useState<Task[]>([rootTask]);\n  const containerRef = React.useRef<HTMLDivElement | null>();\n\n  React.useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container.scrollLeft = container.scrollWidth;\n    }\n  });\n\n  const handleRef = (ref: HTMLDivElement | null) => {\n    containerRef.current = ref;\n  };\n\n  const handleOnTaskClick = (task: Task, index: number) => {\n    setOpenTasks([...openTasks.slice(0, index + 1), task]);\n  };\n\n  const handleDeleteTask = (task: Task, index: number) => {\n    // Next opened panel contains sub tasks of current task.\n    if (openTasks[index + 1]?.id === task.id) {\n      setOpenTasks(openTasks.slice(0, index + 1));\n    }\n  };\n\n  return (\n    <Container>\n      <TopBar\n        title=\"Infinity Todo\"\n        actions={[\n          {\n            iconName: \"settings\",\n            onClick: () => {\n              showDialog({ type: SETTINGS_MODAL });\n            },\n          },\n        ]}\n      />\n      <Panels ref={handleRef}>\n        {openTasks.map((task, index) => {\n          return (\n            <div\n              style={{\n                display: \"inline-block\",\n                width: \"100%\",\n                height: \"100%\",\n                maxWidth: \"500px\",\n              }}\n              key={task.id}\n            >\n              <TaskComponent\n                parentTask={task}\n                onTaskClick={(task) => handleOnTaskClick(task, index)}\n                onDeleteTask={(task) => handleDeleteTask(task, index)}\n                selectedTask={openTasks[index + 1]}\n              />\n            </div>\n          );\n        })}\n      </Panels>\n    </Container>\n  );\n};\n\nexport default connector(Home);\n","import {\n  TaskState,\n  TaskAction,\n  FETCH_TASK_FINISH,\n  ADD_TASK_FINISH,\n  UPDATE_TASK_FINISH,\n  DELETE_TASK_FINISH,\n  DELETE_ALL_TASKS_FINISH,\n} from \"./task.types\";\n\nconst initalState: TaskState = {\n  tasks: {},\n};\n\nexport const taskReducer = (\n  state = initalState,\n  action: TaskAction\n): TaskState => {\n  switch (action.type) {\n    case FETCH_TASK_FINISH: {\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.parentId]: action.tasks,\n        },\n      };\n    }\n    case ADD_TASK_FINISH: {\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.task.parentId]: [\n            ...state.tasks[action.task.parentId],\n            action.task,\n          ],\n        },\n      };\n    }\n    case UPDATE_TASK_FINISH: {\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.task.parentId]: state.tasks[action.task.parentId].map(\n            (task) => {\n              if (task.id === action.task.id) {\n                return action.task;\n              }\n              return task;\n            }\n          ),\n        },\n      };\n    }\n    case DELETE_TASK_FINISH: {\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.task.parentId]: state.tasks[action.task.parentId].filter(\n            (t) => t.id !== action.task.id\n          ),\n        },\n      };\n    }\n    case DELETE_ALL_TASKS_FINISH: {\n      return {\n        ...state,\n        tasks: {\n          [-1]: [],\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { UiState, UiActions, SHOW_MODAL, HIDE_MODAL } from \"./ui.types\";\n\nconst initialState: UiState = {\n  modals: [],\n};\n\nconst uiReducer = (state = initialState, action: UiActions): UiState => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        modals: [...state.modals, action.modalOptions],\n      };\n    case HIDE_MODAL:\n      return {\n        ...state,\n        modals: state.modals.filter((modal) => modal.type !== action.modalType),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from \"redux\";\nimport { taskReducer } from \"./task/task.reducer\";\nimport uiReducer from \"./ui/ui.reducer\";\n\nexport default combineReducers({\n  tasks: taskReducer,\n  ui: uiReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducer.redux\";\nimport thunk from \"redux-thunk\";\nimport ServiceLocator from \"src/data/services/service-locator\";\nimport { TaskService } from \"../services/task.service\";\nimport { AppThunkMiddleware } from \"../types\";\n\nconst serviceLocator = new ServiceLocator();\nserviceLocator.registerLazySingleton(TaskService, () => new TaskService());\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const createAppStore = () => {\n  return createStore(\n    reducer,\n    composeEnhancers(\n      applyMiddleware(\n        thunk.withExtraArgument(serviceLocator) as AppThunkMiddleware\n      )\n    )\n  );\n};\n","type RegisterType<T> =\n  | { type: \"factory\"; creator: (args?: any) => T }\n  | { type: \"singleton\"; instance: T }\n  | { type: \"lazySingleton\"; creator: (args?: any) => T };\n\nexport default class ServiceLocator {\n  private lazyInstances: { [key: string]: any } = {};\n  private registers: { [key: string]: RegisterType<any> } = {};\n\n  public get<T>(constructor: { new (): T }, args?: any): T {\n    const register = this.registers[constructor.name];\n\n    if (!register) {\n      throw new Error(\n        `${constructor.name} is not registered with RooteService`\n      );\n    }\n\n    switch (register.type) {\n      case \"singleton\": {\n        return register.instance as T;\n      }\n      case \"factory\": {\n        return register.creator(args) as T;\n      }\n      case \"lazySingleton\": {\n        let instance = this.lazyInstances[constructor.name];\n        if (!instance) {\n          instance = this.lazyInstances[constructor.name] = register.creator(\n            args\n          );\n        }\n        return instance as T;\n      }\n    }\n  }\n\n  public registerFactory<T>(\n    constructor: { new (): T },\n    creator: (args?: any) => T\n  ) {\n    this.registers[constructor.name] = {\n      creator,\n      type: \"factory\",\n    };\n  }\n\n  public registerSingleton<T>(constructor: { new (): T }, instance: T) {\n    this.registers[constructor.name] = {\n      instance,\n      type: \"singleton\",\n    };\n  }\n\n  public registerLazySingleton<T>(\n    constructor: { new (): T },\n    creator: () => T\n  ) {\n    this.registers[constructor.name] = {\n      creator,\n      type: \"lazySingleton\",\n    };\n  }\n}\n","export default class ModalNotFoundError extends Error {\n  constructor(modalType: String) {\n    super(`Modal of type '${modalType}' not found!`);\n  }\n}\n","import styled from \"styled-components\";\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  color?: string;\n}\n\nconst SimpleButton = styled.button<Props>`\n  border: 0px;\n  outline: none;\n  background-color: ${({ color }) => color || \"blueviolet\"};\n  padding: 8px 16px;\n  border-radius: 4px;\n  font-size: 16px;\n  color: white;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n\n  &:active {\n    opacity: 0.5;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: unset;\n  }\n`;\n\nexport default SimpleButton;\n","import { keyframes } from \"styled-components\";\n\nexport default keyframes`\n  from {\n    opacity: 0.5;\n    transform: translateY(50px) scale(0.8);\n  }\n\n  to {\n    opacity: 1.0;\n    transform: translateY(0px) scale(1.0);\n  }\n`;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport fadeInDialogAnimation from \"src/components/animatons/fade-in-dialog-animation\";\n\n/* State and Props */\ninterface OwnProps {\n  onClose?: () => void;\n}\n\n/* Styles */\nconst OverlayContainer = styled.div`\n  position: fixed;\n  background-color: rgba(1, 1, 1, 0.3);\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  max-width: 600px;\n  width: 80%;\n  animation: ${fadeInDialogAnimation} 0.3s;\n`;\n\nconst SimpleModal: FunctionComponent<OwnProps> = ({ onClose, children }) => {\n  return (\n    <OverlayContainer onClick={onClose}>\n      <ContentContainer onClick={(e) => e.stopPropagation()}>\n        {children}\n      </ContentContainer>\n    </OverlayContainer>\n  );\n};\n\nexport default SimpleModal;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/* Styles */\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 4px;\n  display: block;\n  font-size: 0.8rem;\n  font-weight: bold;\n`;\n\nconst Input = styled.input<{ borderColor?: string; width?: string }>`\n  display: block;\n  border: 2px solid grey;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  width: ${(props) => props.width};\n\n  &:active {\n    outline: none;\n    border: 2px solid ${({ borderColor }) => borderColor || \"blueviolet\"};\n  }\n\n  &:focus {\n    outline: none;\n    border: 2px solid ${({ borderColor }) => borderColor || \"blueviolet\"};\n  }\n`;\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  borderColor?: string;\n  width?: string;\n}\n\nconst SimpleTextInput: React.FunctionComponent<Props> = ({\n  label,\n  ...props\n}) => {\n  return (\n    <Container>\n      {label && <Label>{label}</Label>}\n      <Input {...props} />\n    </Container>\n  );\n};\n\nexport default SimpleTextInput;\n","import React, { FunctionComponent } from \"react\";\n\ntype TRBL = { left?: number; right?: number; top?: number; bottom?: number };\n\ntype Props = {\n  children: React.ReactElement;\n  margin?: number | TRBL;\n  padding?: number | TRBL;\n} & React.HTMLAttributes<HTMLElement>;\n\nfunction normalizeValues(value?: number | TRBL): string {\n  if (!value) {\n    return \"\";\n  }\n\n  if (typeof value === \"number\") {\n    return `${value}px`;\n  }\n\n  const { bottom, left, right, top } = value;\n\n  return `${top || 0}px ${right || 0}px ${bottom || 0}px ${left || 0}px`;\n}\n\nconst Spacing: FunctionComponent<Props> = ({\n  children,\n  margin,\n  padding,\n  ...restProps\n}) => {\n  const normalizedMargin = normalizeValues(margin);\n  const normalizedPadding = normalizeValues(padding);\n\n  return (\n    <div\n      style={{ margin: normalizedMargin, padding: normalizedPadding }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Spacing;\n","import React, { FunctionComponent } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\nimport { hideModal } from \"src/data/redux/ui/ui.actions\";\nimport { DELETE_ALL_TASKS_MODAL } from \"src/data/types\";\nimport styled from \"styled-components\";\nimport { deleteAllTasks } from \"src/data/redux/task/task.actions\";\nimport SimpleButton from \"../../buttons/SimpleButton\";\nimport SimpleModal from \"../modal-types/SimpleModal\";\nimport SimpleTextInput from \"src/components/input/SimpleTextInput\";\nimport Spacing from \"src/components/spacing/Spacing\";\n\n/* Styles */\n\nconst Container = styled.div`\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\n/* State and Props */\n\nconst mapDispatchToProps = {\n  hideModal,\n  deleteAllTasks,\n};\n\nconst connector = connect(undefined, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst DeleteAllTasksModal: FunctionComponent<PropsFromRedux> = ({\n  hideModal,\n  deleteAllTasks,\n}) => {\n  const [inputText, setInputText] = React.useState<string>(\"\");\n\n  const handleDeleteAllTasks = async () => {\n    deleteAllTasks();\n    hideModal(DELETE_ALL_TASKS_MODAL);\n  };\n\n  const handleCloseModal = () => {\n    hideModal(DELETE_ALL_TASKS_MODAL);\n  };\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInputText(value);\n  };\n\n  return (\n    <SimpleModal onClose={handleCloseModal}>\n      <Container>\n        <Title>Are sure you want to delete all the data?</Title>\n        <p>\n          Type <strong>Delete all</strong> below\n        </p>\n        <Spacing margin={{ top: 16, bottom: 16 }}>\n          <SimpleTextInput\n            onChange={handleTextChange}\n            value={inputText}\n            placeholder=\"Delete all\"\n            borderColor=\"red\"\n          />\n        </Spacing>\n        <SimpleButton\n          onClick={handleDeleteAllTasks}\n          disabled={inputText !== \"Delete all\"}\n          color=\"red\"\n        >\n          Delete all\n        </SimpleButton>\n      </Container>\n    </SimpleModal>\n  );\n};\n\nexport default connector(DeleteAllTasksModal);\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport fadeInDialogAnimation from \"src/components/animatons/fade-in-dialog-animation\";\n\nconst OverlayContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentContainer = styled.div`\n  background-color: white;\n  height: 100%;\n  width: 100%;\n  border-radius: 0px;\n  animation: ${fadeInDialogAnimation} 0.3s;\n\n  @media screen and (min-width: 600px) {\n    height: unset;\n    width: 50%;\n    max-width: 600px;\n    border-radius: 8px;\n  }\n`;\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst MobileFullScreenModal: FunctionComponent<Props> = ({\n  children,\n  onClose,\n}) => {\n  return (\n    <OverlayContainer onClick={onClose}>\n      <ContentContainer onClick={(e) => e.stopPropagation()}>\n        {children}\n      </ContentContainer>\n    </OverlayContainer>\n  );\n};\n\nexport default MobileFullScreenModal;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { showModal } from \"src/data/redux/ui/ui.actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { DELETE_ALL_TASKS_MODAL } from \"src/data/types\";\n\n/* Styles */\nconst Container = styled.div`\n  padding: 24px;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CloseIcon = styled.i`\n  margin-bottom: 8px;\n  border-radius: 50%;\n  padding: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: lightgrey;\n    cursor: pointer;\n  }\n`;\n\nconst Heading = styled.div`\n  font-size: 24px;\n`;\n\nconst OptionList = styled.ul`\n  list-style-type: none;\n  padding: 0px;\n`;\n\nconst Option = styled.li`\n  border-top: 1px solid lightgrey;\n  padding: 8px;\n  transition: 0.3s;\n\n  &:last-of-type {\n    border-bottom: 1px solid lightgrey;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightgrey;\n  }\n\n  &:active {\n    background-color: grey;\n  }\n`;\n\n/* State and Props */\ninterface OwnProps {\n  onClose?: () => void;\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  showModal,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Settings: FunctionComponent<OwnProps & PropsFromRedux> = ({\n  onClose,\n  showModal,\n}) => {\n  const handleDeleteAllTaskClick = () => {\n    showModal({ type: DELETE_ALL_TASKS_MODAL });\n  };\n\n  return (\n    <Container>\n      <TopBar>\n        <Heading>Settings</Heading>\n        <CloseIcon className=\"material-icons\" onClick={onClose}>\n          close\n        </CloseIcon>\n      </TopBar>\n      <OptionList onClick={handleDeleteAllTaskClick}>\n        <Option>Delete all tasks</Option>\n      </OptionList>\n    </Container>\n  );\n};\n\nexport default connector(Settings);\n","import React, { FunctionComponent } from \"react\";\nimport MobileFullScreenModal from \"../modal-types/MobileFullScreenModal\";\nimport Settings from \"src/pages/settings/Settings\";\nimport { RootState, SETTINGS_MODAL } from \"src/data/types\";\nimport { hideModal } from \"src/data/redux/ui/ui.actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\n/* State and Props */\ninterface OwnProps {}\n\nconst mapStateToProps = (state: RootState, props: OwnProps) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  hideModal,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst SettingsModal: FunctionComponent<OwnProps & PropsFromRedux> = ({\n  hideModal,\n}) => {\n  const handleModalClose = () => {\n    hideModal(SETTINGS_MODAL);\n  };\n\n  return (\n    <MobileFullScreenModal onClose={handleModalClose}>\n      <Settings onClose={handleModalClose} />\n    </MobileFullScreenModal>\n  );\n};\n\nexport default connector(SettingsModal);\n","import React, { FunctionComponent } from \"react\";\nimport { RootState, EDIT_TASK_MODAL, Task } from \"src/data/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport MobileFullScreenModal from \"../modal-types/MobileFullScreenModal\";\nimport { hideModal } from \"src/data/redux/ui/ui.actions\";\nimport TopBar from \"src/components/top-bar/TopBar\";\nimport SimpleTextInput from \"src/components/input/SimpleTextInput\";\nimport styled from \"styled-components\";\nimport SimpleButton from \"src/components/buttons/SimpleButton\";\n\n/* Styles */\nconst Container = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\n/* State and Props */\ninterface OwnProps {\n  task: Task;\n}\n\nconst mapStateToProps = (state: RootState, props: OwnProps) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  hideModal,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst EditTaskModal: FunctionComponent<OwnProps & PropsFromRedux> = ({\n  hideModal,\n  task,\n}) => {\n  const handleModalClose = React.useCallback(() => {\n    hideModal(EDIT_TASK_MODAL);\n  }, [hideModal]);\n\n  return (\n    <MobileFullScreenModal onClose={handleModalClose}>\n      <TopBar\n        title=\"Edit Task\"\n        actions={[{ iconName: \"close\", onClick: handleModalClose }]}\n      />\n      <Container>\n        <SimpleTextInput value={task.content} label=\"Task\" width=\"100%\" />\n        <SimpleButton style={{ marginTop: \"40px\", justifySelf: \"right\" }}>\n          Save\n        </SimpleButton>\n      </Container>\n    </MobileFullScreenModal>\n  );\n};\n\nexport default connector(EditTaskModal);\n","import React, { FunctionComponent } from \"react\";\nimport {\n  DELETE_ALL_TASKS_MODAL,\n  RootState,\n  SETTINGS_MODAL,\n  EDIT_TASK_MODAL,\n  ModalType,\n} from \"src/data/types\";\nimport styled from \"styled-components\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport ModalNotFoundError from \"src/errors/modal-not-found\";\nimport DeleteAllTasksModal from \"./app-modals/DeleteAllTasksModal\";\nimport SettingsModal from \"./app-modals/SettingsModal\";\nimport EditTaskModal from \"./app-modals/EditTaskModal\";\n\nconst modalLookupTable: Record<ModalType, React.ComponentType<any>> = {\n  [DELETE_ALL_TASKS_MODAL]: DeleteAllTasksModal,\n  [SETTINGS_MODAL]: SettingsModal,\n  [EDIT_TASK_MODAL]: EditTaskModal,\n};\n\n/* Styles */\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n/* Props and State */\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    modals: state.ui.modals,\n  };\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst ModalManager: FunctionComponent<PropsFromRedux> = ({\n  children,\n  modals,\n}) => {\n  return (\n    <Container>\n      {children}\n      {modals &&\n        modals.map((modal) => {\n          const Modal = modalLookupTable[modal.type];\n          if (!Modal) {\n            throw new ModalNotFoundError(modal.type);\n          }\n          return <Modal key={modal.type} {...modal} />;\n        })}\n    </Container>\n  );\n};\n\nexport default connector(ModalManager);\n","import React, { FunctionComponent } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/Home\";\nimport { Provider } from \"react-redux\";\nimport { createAppStore } from \"./data/redux/store.redux\";\nimport \"./App.css\";\nimport ModalManager from \"./components/modal/ModalManager\";\n\nconst store = createAppStore();\n\nconst getBasename = () => {\n  if (process.env.NODE_ENV === \"production\") {\n    return process.env.PUBLIC_URL + \"/\";\n  }\n  return \"/\";\n};\n\nconst App: FunctionComponent = () => {\n  return (\n    <HashRouter basename={getBasename()}>\n      <Provider store={store}>\n        <ModalManager>\n          <Route path=\"/\" component={Home} />\n        </ModalManager>\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","export * from \"./task\";\nexport * from \"./redux\";\nexport * from \"./ui\";\n"],"sourceRoot":""}